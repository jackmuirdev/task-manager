# users.yaml

paths:
  /api/users:
    get:
      summary: Retrieve all users
      description: Retrieve a list of all users from the database.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of users.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Register a new user
      description: Register a new user with the provided information.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      examples:
        Example1:
          summary: Register a new user - Valid data
          value:
            name: John Doe
            email: john@example.com
            password: secretpassword
      responses:
        '201':
          description: User created successfully.
        '400':
          description: Bad request. Invalid user data.
        '500':
          description: Internal server error. Failed to register user.
  /api/users/{id}:
    get:   # <--- HTTP method for the get operation should be defined here
      summary: Get user by ID
      description: Retrieve a specific user by their ID.
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the user to retrieve.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found.
        '500':
          description: Internal server error. Failed to retrieve user.
    delete:
      summary: Delete user by ID
      description: Delete a specific user by their ID.
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the user to delete.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User deleted successfully.
        '404':
          description: User not found.
        '500':
          description: Internal server error. Failed to delete user.
  /api/users/login:
    post:
      summary: User login
      description: Login an existing user with their credentials.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUser'
      responses:
        '200':
          description: User logged in successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginResponse'
        '401':
          description: Unauthorized. Invalid credentials.
        '500':
          description: Internal server error. Failed to login user.
  /api/users/logout:
    post:
      summary: User logout
      description: Logout the currently logged in user.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User logged out successfully.
        '500':
          description: Internal server error. Failed to logout user.
  /api/users/profile:
    get:
      summary: Get user profile
      description: Retrieve the profile of the currently logged in user.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized. User not logged in.
        '500':
          description: Internal server error. Failed to retrieve user profile.
    put:
      summary: Update user profile
      description: Update the profile of the currently logged in user.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserProfile'
      responses:
        '200':
          description: User profile updated successfully.
        '400':
          description: Bad request. Invalid user data.
        '401':
          description: Unauthorized. User not logged in.
        '500':
          description: Internal server error. Failed to update user profile.